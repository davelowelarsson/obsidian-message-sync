# Dependencies
node_modules/
.pnpm-debug.log*
.pnpm-store/

# Build outputs
dist/
build/
output/

# Obsidian plugin development files (keep source, ignore build output)
# We keep the source files but ignore the built plugin files
# The built files are generated by the build process
main.js
manifest.json.bak

# Environment variables
.env
.env.local
.env.*.local

# Configuration files with sensitive data
config.yaml

# Testing
coverage/
.nyc_output/

# IDE and editor files
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.vscode/extensions.json
.vscode/mcp.json
.idea/
*.swp
*.swo
*~

# Operating System
.DS_Store
Thumbs.db

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# TaskMaster AI files (keep tasks but ignore reports)
.taskmaster/reports/
.taskmaster/logs/

logs
dev-debug.log
# Dependency directories
# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
# OS specific

# Task files
tasks.json
tasks/
